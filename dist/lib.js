var mergeData=function(e){"use strict";var a=function(){return(a=Object.assign||function(e){for(var a,s=1,t=arguments.length;s<t;s++)for(var r in a=arguments[s])Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r]);return e}).apply(this,arguments)};return e.mergeData=function(){for(var e,s,t={},r=arguments.length;r--;)for(var c=0,n=Object.keys(arguments[r]);c<n.length;c++)switch(e=n[c]){case"class":case"style":case"directives":Array.isArray(t[e])||(t[e]=[]),t[e]=t[e].concat(arguments[r][e]);break;case"staticClass":if(!arguments[r][e])break;void 0===t[e]&&(t[e]=""),t[e]&&(t[e]+=" "),t[e]+=arguments[r][e].trim();break;case"on":case"nativeOn":t[e]||(t[e]={});for(var o=0,i=Object.keys(arguments[r][e]||{});o<i.length;o++)s=i[o],t[e][s]?t[e][s]=[].concat(t[e][s],arguments[r][e][s]):t[e][s]=arguments[r][e][s];break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":t[e]||(t[e]={}),t[e]=a({},arguments[r][e],t[e]);break;case"slot":case"key":case"ref":case"tag":case"show":case"keepAlive":default:t[e]||(t[e]=arguments[r][e])}return t},e}({});
//# sourceMappingURL=lib.js.map
